<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="drawing_8cpp" kind="file" language="C++">
    <compoundname>drawing.cpp</compoundname>
    <includes refid="drawing_8h" local="yes">drawing.h</includes>
    <includes local="no">imgui_internal.h</includes>
    <incdepgraph>
      <node id="4">
        <label>imgui_internal.h</label>
      </node>
      <node id="2">
        <label>drawing.h</label>
        <link refid="drawing_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/root/fyp/project/src/drawing.cpp</label>
        <link refid="drawing_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>imgui.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="drawing_8cpp_1a0733fed66e38bebb3e8ee4d86b3515d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Icon</definition>
        <argsstring>(IconType type, const ImVec2 &amp;size, bool filled, const ImVec4 &amp;color, const ImVec4 &amp;innerColor)</argsstring>
        <name>Icon</name>
        <param>
          <type><ref refid="drawing_8h_1ab83da487393d464a63f8b104776e1fdd" kindref="member">IconType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>const ImVec2 &amp;</type>
          <declname>size</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>filled</declname>
        </param>
        <param>
          <type>const ImVec4 &amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type>const ImVec4 &amp;</type>
          <declname>innerColor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/fyp/project/src/drawing.cpp" line="4" column="6" bodyfile="/root/fyp/project/src/drawing.cpp" bodystart="4" bodyend="14"/>
        <references refid="drawing_8cpp_1a2717a237608a4721d43319698e74e542" compoundref="drawing_8cpp" startline="16" endline="167">DrawIcon</references>
        <referencedby refid="class_parse_gen_1_1_g_u_i_1_1_node_1a15a07e070beeb57842b4e1371c0d1794" compoundref="node_8cpp" startline="5" endline="39">ParseGen::GUI::Node::RenderFrame</referencedby>
      </memberdef>
      <memberdef kind="function" id="drawing_8cpp_1a2717a237608a4721d43319698e74e542" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DrawIcon</definition>
        <argsstring>(ImDrawList *drawList, IconType type, const ImVec2 &amp;a, const ImVec2 &amp;b, bool filled, ImColor color, ImColor innerColor)</argsstring>
        <name>DrawIcon</name>
        <param>
          <type>ImDrawList *</type>
          <declname>drawList</declname>
        </param>
        <param>
          <type><ref refid="drawing_8h_1ab83da487393d464a63f8b104776e1fdd" kindref="member">IconType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>const ImVec2 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const ImVec2 &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>filled</declname>
        </param>
        <param>
          <type>ImColor</type>
          <declname>color</declname>
        </param>
        <param>
          <type>ImColor</type>
          <declname>innerColor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/fyp/project/src/drawing.cpp" line="16" column="6" bodyfile="/root/fyp/project/src/drawing.cpp" bodystart="16" bodyend="167"/>
        <references refid="drawing_8h_1ab83da487393d464a63f8b104776e1fdda30954d90085f6eaaf5817917fc5fecb3">Circle</references>
        <references refid="drawing_8h_1ab83da487393d464a63f8b104776e1fdda8f7671185d590914ac21c7511767b699">Diamond</references>
        <references refid="drawing_8h_1ab83da487393d464a63f8b104776e1fdda5174d1309f275ba6f275db3af9eb3e18">Grid</references>
        <references refid="drawing_8h_1ab83da487393d464a63f8b104776e1fdda8d0b97f599498054e5e7a84b1d5c2140">RoundSquare</references>
        <references refid="drawing_8h_1ab83da487393d464a63f8b104776e1fddaceb46ca115d05c51aa5a16a8867c3304">Square</references>
        <referencedby refid="drawing_8h_1a0733fed66e38bebb3e8ee4d86b3515d5" compoundref="drawing_8cpp" startline="4" endline="14">Icon</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="drawing_8h" kindref="compound">drawing.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;imgui_internal.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4" refid="drawing_8h_1a0733fed66e38bebb3e8ee4d86b3515d5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="drawing_8cpp_1a0733fed66e38bebb3e8ee4d86b3515d5" kindref="member">Icon</ref>(<ref refid="drawing_8h_1ab83da487393d464a63f8b104776e1fdd" kindref="member">IconType</ref><sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImVec2<sp/>&amp;size,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>filled,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImVec4<sp/>&amp;color,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImVec4<sp/>&amp;innerColor)</highlight></codeline>
<codeline lineno="5"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ImGui::IsRectVisible(size))</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImVec2<sp/>cursorPos<sp/>=<sp/>ImGui::GetCursorScreenPos();</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImDrawList<sp/>*drawList<sp/>=<sp/>ImGui::GetWindowDrawList();</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="drawing_8cpp_1a2717a237608a4721d43319698e74e542" kindref="member">DrawIcon</ref>(drawList,<sp/>type,<sp/>cursorPos,<sp/>ImVec2(cursorPos.x<sp/>+<sp/>size.x,<sp/>cursorPos.y<sp/>+<sp/>size.y),<sp/>filled,<sp/>color,<sp/>innerColor);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui::Dummy(size);</highlight></codeline>
<codeline lineno="14"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="drawing_8h_1a2717a237608a4721d43319698e74e542" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="drawing_8cpp_1a2717a237608a4721d43319698e74e542" kindref="member">DrawIcon</ref>(ImDrawList<sp/>*drawList,<sp/><ref refid="drawing_8h_1ab83da487393d464a63f8b104776e1fdd" kindref="member">IconType</ref><sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImVec2<sp/>&amp;a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImVec2<sp/>&amp;b,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>filled,<sp/>ImColor<sp/>color,<sp/>ImColor<sp/>innerColor)</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ImVec2<sp/>a<sp/>=<sp/>cursorPos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ImVec2<sp/>b<sp/>=<sp/>ImVec2(cursorPos.x<sp/>+<sp/>10.0f,<sp/>cursorPos.y<sp/>+<sp/>10.0f);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bool<sp/>filled<sp/>=<sp/>true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ImColor<sp/>color<sp/>=<sp/>ImColor(ImVec4(1.0,<sp/>0.0,<sp/>0.0,<sp/>1.0));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ImColor<sp/>innerColor<sp/>=<sp/>ImColor(ImVec4(0.0,<sp/>1.0,<sp/>0.0,<sp/>1.0));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rect<sp/>=<sp/>ImRect(a,<sp/>b);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rect_x<sp/>=<sp/>rect.Min.x;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rect_y<sp/>=<sp/>rect.Min.y;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rect_w<sp/>=<sp/>rect.Max.x<sp/>-<sp/>rect.Min.x;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rect_h<sp/>=<sp/>rect.Max.y<sp/>-<sp/>rect.Min.y;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rect_center_x<sp/>=<sp/>(rect.Min.x<sp/>+<sp/>rect.Max.x)<sp/>*<sp/>0.5f;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rect_center_y<sp/>=<sp/>(rect.Min.y<sp/>+<sp/>rect.Max.y)<sp/>*<sp/>0.5f;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rect_center<sp/>=<sp/>ImVec2(rect_center_x,<sp/>rect_center_y);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>outline_scale<sp/>=<sp/>rect_w<sp/>/<sp/>24.0f;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>extra_segments<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(2<sp/>*<sp/>outline_scale);<sp/></highlight><highlight class="comment">//<sp/>for<sp/>full<sp/>circle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>triangleStart<sp/>=<sp/>rect_center_x<sp/>+<sp/>0.32f<sp/>*<sp/>rect_w;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rect_offset<sp/>=<sp/>-</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(rect_w<sp/>*<sp/>0.25f<sp/>*<sp/>0.25f);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>rect.Min.x<sp/>+=<sp/>rect_offset;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>rect.Max.x<sp/>+=<sp/>rect_offset;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>rect_x<sp/>+=<sp/>rect_offset;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>rect_center_x<sp/>+=<sp/>rect_offset<sp/>*<sp/>0.5f;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>rect_center.x<sp/>+=<sp/>rect_offset<sp/>*<sp/>0.5f;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/><ref refid="drawing_8h_1ab83da487393d464a63f8b104776e1fdda30954d90085f6eaaf5817917fc5fecb3" kindref="member">IconType::Circle</ref>)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>rect_center;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!filled)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>0.5f<sp/>*<sp/>rect_w<sp/>/<sp/>2.0f<sp/>-<sp/>0.5f;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(innerColor<sp/>&amp;<sp/>0xFF000000)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawList-&gt;AddCircleFilled(c,<sp/>r,<sp/>innerColor,<sp/>12<sp/>+<sp/>extra_segments);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawList-&gt;AddCircle(c,<sp/>r,<sp/>color,<sp/>12<sp/>+<sp/>extra_segments,<sp/>2.0f<sp/>*<sp/>outline_scale);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawList-&gt;AddCircleFilled(c,<sp/>0.5f<sp/>*<sp/>rect_w<sp/>/<sp/>2.0f,<sp/>color,<sp/>12<sp/>+<sp/>extra_segments);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/><ref refid="drawing_8h_1ab83da487393d464a63f8b104776e1fddaceb46ca115d05c51aa5a16a8867c3304" kindref="member">IconType::Square</ref>)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filled)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>0.5f<sp/>*<sp/>rect_w<sp/>/<sp/>2.0f;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p0<sp/>=<sp/>ImVec2(rect_center_x<sp/>-<sp/>r,<sp/>rect_center_y<sp/>-<sp/>r);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p1<sp/>=<sp/>ImVec2(rect_center_x<sp/>+<sp/>r,<sp/>rect_center_y<sp/>+<sp/>r);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawList-&gt;AddRectFilled(p0,<sp/>p1,<sp/>color,<sp/>0,<sp/>15<sp/>+<sp/>extra_segments);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>0.5f<sp/>*<sp/>rect_w<sp/>/<sp/>2.0f<sp/>-<sp/>0.5f;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p0<sp/>=<sp/>ImVec2(rect_center_x<sp/>-<sp/>r,<sp/>rect_center_y<sp/>-<sp/>r);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p1<sp/>=<sp/>ImVec2(rect_center_x<sp/>+<sp/>r,<sp/>rect_center_y<sp/>+<sp/>r);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(innerColor<sp/>&amp;<sp/>0xFF000000)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawList-&gt;AddRectFilled(p0,<sp/>p1,<sp/>innerColor,<sp/>0,<sp/>15<sp/>+<sp/>extra_segments);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawList-&gt;AddRect(p0,<sp/>p1,<sp/>color,<sp/>0,<sp/>15<sp/>+<sp/>extra_segments,<sp/>2.0f<sp/>*<sp/>outline_scale);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/><ref refid="drawing_8h_1ab83da487393d464a63f8b104776e1fdda5174d1309f275ba6f275db3af9eb3e18" kindref="member">IconType::Grid</ref>)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>0.5f<sp/>*<sp/>rect_w<sp/>/<sp/>2.0f;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>ceilf(r<sp/>/<sp/>3.0f);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>baseTl<sp/>=<sp/>ImVec2(floorf(rect_center_x<sp/>-<sp/>w<sp/>*<sp/>2.5f),<sp/>floorf(rect_center_y<sp/>-<sp/>w<sp/>*<sp/>2.5f));</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>baseBr<sp/>=<sp/>ImVec2(floorf(baseTl.x<sp/>+<sp/>w),<sp/>floorf(baseTl.y<sp/>+<sp/>w));</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tl<sp/>=<sp/>baseTl;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>br<sp/>=<sp/>baseBr;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>++i)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tl.x<sp/>=<sp/>baseTl.x;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br.x<sp/>=<sp/>baseBr.x;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawList-&gt;AddRectFilled(tl,<sp/>br,<sp/>color);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tl.x<sp/>+=<sp/>w<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br.x<sp/>+=<sp/>w<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>1<sp/>||<sp/>filled)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawList-&gt;AddRectFilled(tl,<sp/>br,<sp/>color);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tl.x<sp/>+=<sp/>w<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br.x<sp/>+=<sp/>w<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawList-&gt;AddRectFilled(tl,<sp/>br,<sp/>color);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tl.y<sp/>+=<sp/>w<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br.y<sp/>+=<sp/>w<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>triangleStart<sp/>=<sp/>br.x<sp/>+<sp/>w<sp/>+<sp/>1.0f<sp/>/<sp/>24.0f<sp/>*<sp/>rect_w;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/><ref refid="drawing_8h_1ab83da487393d464a63f8b104776e1fdda8d0b97f599498054e5e7a84b1d5c2140" kindref="member">IconType::RoundSquare</ref>)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filled)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>0.5f<sp/>*<sp/>rect_w<sp/>/<sp/>2.0f;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cr<sp/>=<sp/>r<sp/>*<sp/>0.5f;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p0<sp/>=<sp/>ImVec2(rect_center_x<sp/>-<sp/>r,<sp/>rect_center_y<sp/>-<sp/>r);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p1<sp/>=<sp/>ImVec2(rect_center_x<sp/>+<sp/>r,<sp/>rect_center_y<sp/>+<sp/>r);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawList-&gt;AddRectFilled(p0,<sp/>p1,<sp/>color,<sp/>cr,<sp/>15);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>0.5f<sp/>*<sp/>rect_w<sp/>/<sp/>2.0f<sp/>-<sp/>0.5f;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cr<sp/>=<sp/>r<sp/>*<sp/>0.5f;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p0<sp/>=<sp/>ImVec2(rect_center_x<sp/>-<sp/>r,<sp/>rect_center_y<sp/>-<sp/>r);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p1<sp/>=<sp/>ImVec2(rect_center_x<sp/>+<sp/>r,<sp/>rect_center_y<sp/>+<sp/>r);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(innerColor<sp/>&amp;<sp/>0xFF000000)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawList-&gt;AddRectFilled(p0,<sp/>p1,<sp/>innerColor,<sp/>cr,<sp/>15);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawList-&gt;AddRect(p0,<sp/>p1,<sp/>color,<sp/>cr,<sp/>15,<sp/>2.0f<sp/>*<sp/>outline_scale);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/><ref refid="drawing_8h_1ab83da487393d464a63f8b104776e1fdda8f7671185d590914ac21c7511767b699" kindref="member">IconType::Diamond</ref>)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filled)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>0.607f<sp/>*<sp/>rect_w<sp/>/<sp/>2.0f;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>rect_center;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawList-&gt;PathLineTo(ImVec2(c.x<sp/>+<sp/>0,<sp/>c.y<sp/>-<sp/>r));</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawList-&gt;PathLineTo(ImVec2(c.x<sp/>+<sp/>r,<sp/>c.y<sp/>+<sp/>0));</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawList-&gt;PathLineTo(ImVec2(c.x<sp/>+<sp/>0,<sp/>c.y<sp/>+<sp/>r));</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawList-&gt;PathLineTo(ImVec2(c.x<sp/>-<sp/>r,<sp/>c.y<sp/>+<sp/>0));</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawList-&gt;PathFillConvex(color);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>0.607f<sp/>*<sp/>rect_w<sp/>/<sp/>2.0f<sp/>-<sp/>0.5f;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>rect_center;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawList-&gt;PathLineTo(ImVec2(c.x<sp/>+<sp/>0,<sp/>c.y<sp/>-<sp/>r));</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawList-&gt;PathLineTo(ImVec2(c.x<sp/>+<sp/>r,<sp/>c.y<sp/>+<sp/>0));</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawList-&gt;PathLineTo(ImVec2(c.x<sp/>+<sp/>0,<sp/>c.y<sp/>+<sp/>r));</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawList-&gt;PathLineTo(ImVec2(c.x<sp/>-<sp/>r,<sp/>c.y<sp/>+<sp/>0));</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(innerColor<sp/>&amp;<sp/>0xFF000000)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawList-&gt;AddConvexPolyFilled(drawList-&gt;_Path.Data,<sp/>drawList-&gt;_Path.Size,<sp/>innerColor);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawList-&gt;PathStroke(color,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>2.0f<sp/>*<sp/>outline_scale);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/root/fyp/project/src/drawing.cpp"/>
  </compounddef>
</doxygen>
